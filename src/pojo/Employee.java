package pojo;

// Generated Jun 15, 2015 9:10:58 PM by Hibernate Tools 3.4.0.CR1

import java.util.HashSet;
import java.util.Set;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.UniqueConstraint;

/**
 * Employee generated by hbm2java
 */
@Entity
@Table(name = "Employee", uniqueConstraints = @UniqueConstraint(columnNames = "UserID"))
public class Employee implements java.io.Serializable
{

	private int employeeId;
	private User user;
	private Integer coefficient;
	private Set<Thematic> thematics = new HashSet<Thematic>(0);

	public Employee() {
	}

	public Employee(int employeeId) {
		this.employeeId = employeeId;
	}
	public Employee(int employeeId, User user, Integer coefficient,
			Set<Thematic> thematics) {
		this.employeeId = employeeId;
		this.user = user;
		this.coefficient = coefficient;
		this.thematics = thematics;
	}

	@Id
	@GeneratedValue(strategy=GenerationType.IDENTITY)
	@Column(name = "EmployeeID", unique = true, nullable = false)
	public int getEmployeeId()
	{
		return this.employeeId;
	}

	public void setEmployeeId(int employeeId)
	{
		this.employeeId = employeeId;
	}

	@ManyToOne(fetch = FetchType.EAGER)
	@JoinColumn(name = "UserID", unique = true)
	public User getUser()
	{
		return this.user;
	}

	public void setUser(User user)
	{
		this.user = user;
	}

	@Column(name = "Coefficient")
	public Integer getCoefficient()
	{
		return this.coefficient;
	}

	public void setCoefficient(Integer coefficient)
	{
		this.coefficient = coefficient;
	}

	@OneToMany(fetch = FetchType.EAGER, mappedBy = "employee")
	public Set<Thematic> getThematics()
	{
		return this.thematics;
	}

	public void setThematics(Set<Thematic> thematics)
	{
		this.thematics = thematics;
	}

}