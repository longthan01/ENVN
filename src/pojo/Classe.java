package pojo;

// Generated Jun 7, 2015 1:31:52 AM by Hibernate Tools 3.4.0.CR1

import java.io.Serializable;
import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * Classe generated by hbm2java
 */
@Entity
@Table(name = "Classe")
public class Classe implements java.io.Serializable {

	private int classId;
	private TimeTable timeTable;
	private Course course;
	private Thematic thematic;
	private Serializable className;
	private Serializable teachers;
	private Date startDate;
	private Date endDate;
	private Serializable notes;
	private Integer status;
	private Integer durationOfStudiesHour;
	private Integer fees;
	
	private Set<RegistrationInfomation> registrationInfomations = new HashSet<RegistrationInfomation>(
			0);

	public Classe() {
	}

	public Classe(int classId, TimeTable timeTable, Course course,
			Thematic thematic, Serializable className, Serializable teachers,
			Date startDate, Date endDate) {
		this.classId = classId;
		this.timeTable = timeTable;
		this.course = course;
		this.thematic = thematic;
		this.className = className;
		this.teachers = teachers;
		this.startDate = startDate;
		this.endDate = endDate;
	}

	public Classe(int classId, TimeTable timeTable, Course course,
			Thematic thematic, Serializable className, Serializable teachers,
			Date startDate, Date endDate, Serializable notes, Integer status,
			Set<RegistrationInfomation> registrationInfomations) {
		this.classId = classId;
		this.timeTable = timeTable;
		this.course = course;
		this.thematic = thematic;
		this.className = className;
		this.teachers = teachers;
		this.startDate = startDate;
		this.endDate = endDate;
		this.notes = notes;
		this.status = status;
		this.registrationInfomations = registrationInfomations;
	}

	@Id
	@Column(name = "ClassID", unique = true, nullable = false)
	public int getClassId() {
		return this.classId;
	}

	public void setClassId(int classId) {
		this.classId = classId;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "TimeTableID", nullable = false)
	public TimeTable getTimeTable() {
		return this.timeTable;
	}

	public void setTimeTable(TimeTable timeTable) {
		this.timeTable = timeTable;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "CourseID", nullable = false)
	public Course getCourse() {
		return this.course;
	}

	public void setCourse(Course course) {
		this.course = course;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "ThematicID", nullable = false)
	public Thematic getThematic() {
		return this.thematic;
	}

	public void setThematic(Thematic thematic) {
		this.thematic = thematic;
	}

	@Column(name = "ClassName", nullable = false)
	public Serializable getClassName() {
		return this.className;
	}

	public void setClassName(Serializable className) {
		this.className = className;
	}

	@Column(name = "Teachers", nullable = false)
	public Serializable getTeachers() {
		return this.teachers;
	}

	public void setTeachers(Serializable teachers) {
		this.teachers = teachers;
	}

	@Temporal(TemporalType.DATE)
	@Column(name = "StartDate", nullable = false, length = 10)
	public Date getStartDate() {
		return this.startDate;
	}

	public void setStartDate(Date startDate) {
		this.startDate = startDate;
	}

	@Temporal(TemporalType.DATE)
	@Column(name = "EndDate", nullable = false, length = 10)
	public Date getEndDate() {
		return this.endDate;
	}

	public void setEndDate(Date endDate) {
		this.endDate = endDate;
	}

	@Column(name = "Notes")
	public Serializable getNotes() {
		return this.notes;
	}

	public void setNotes(Serializable notes) {
		this.notes = notes;
	}

	@Column(name = "Status")
	public Integer getStatus() {
		return this.status;
	}

	public void setStatus(Integer status) {
		this.status = status;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "classe")
	public Set<RegistrationInfomation> getRegistrationInfomations() {
		return this.registrationInfomations;
	}

	public void setRegistrationInfomations(
			Set<RegistrationInfomation> registrationInfomations) {
		this.registrationInfomations = registrationInfomations;
	}

	@Column(name = "DurationOfStudies_Hour")
	public Integer getDurationOfStudiesHour() {
	return this.durationOfStudiesHour;
	}

	public void setDurationOfStudiesHour(Integer durationOfStudiesHour) {
	this.durationOfStudiesHour = durationOfStudiesHour;
	}

	@Column(name = "Fees")
	public Integer getFees() {
	return this.fees;
	}

	public void setFees(Integer fees) {
	this.fees = fees;
	}
}
